name: CI Deploy

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        if: ${{ hashFiles('package.json') != '' }}
        with:
          version: 8.15.9
      - uses: actions/setup-node@v3
        if: ${{ hashFiles('package.json') != '' }}
        with:
          node-version: 20
      - name: Install dependencies
        if: ${{ hashFiles('package.json') != '' }}
        run: pnpm install --frozen-lockfile
      - name: Build
        if: ${{ hashFiles('package.json') != '' }}
        run: pnpm run build
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .
          docker push ghcr.io/${{ github.repository }}:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Validate configuration
        run: |
          missing=""
          if [ -z "${{ secrets.SITE_NAME }}" ]; then
            missing="$missing SITE_NAME"
          fi
          if [ -z "${{ secrets.VPS_HOST }}" ]; then
            missing="$missing VPS_HOST"
          fi
          if [ -z "${{ secrets.VPS_USER }}" ]; then
            missing="$missing VPS_USER"
          fi
          if [ -z "${{ secrets.VPS_SSH_KEY }}" ]; then
            missing="$missing VPS_SSH_KEY"
          fi
          if [ -z "${{ secrets.GHCR_TOKEN }}" ]; then
            missing="$missing GHCR_TOKEN"
          fi
          if [ -n "$missing" ]; then
            echo "Error: missing required secrets:$missing" >&2
            exit 1
          fi
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            /srv/${{ secrets.SITE_NAME }}/scripts/deploy-update.sh
